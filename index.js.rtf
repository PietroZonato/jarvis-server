{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 const express = require('express');\
const bodyParser = require('body-parser');\
const axios = require('axios');\
const app = express();\
const port = process.env.PORT || 3000;\
\
app.use(bodyParser.json());\
\
app.post('/jarvis', async (req, res) => \{\
  const intentName = req.body.request?.intent?.name;\
\
  if (intentName === 'ConversazioneIntent') \{\
    const userMessage = req.body.request.intent.slots.messaggio.value;\
\
    try \{\
      const aiResponse = await axios.post('https://api.openai.com/v1/chat/completions', \{\
        model: 'gpt-3.5-turbo',\
        messages: [\{ role: 'user', content: userMessage \}]\
      \}, \{\
        headers: \{\
          'Authorization': `Bearer 
\f1\fs26 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
\f0\fs24 `, // <-- sostituisci con la tua API KEY!\
          'Content-Type': 'application/json'\
        \}\
      \});\
\
      const aiReply = aiResponse.data.choices[0].message.content;\
\
      res.json(\{\
        version: "1.0",\
        response: \{\
          outputSpeech: \{\
            type: "PlainText",\
            text: aiReply\
          \},\
          shouldEndSession: false\
        \}\
      \});\
\
    \} catch (error) \{\
      console.error(error.message);\
      res.json(\{\
        version: "1.0",\
        response: \{\
          outputSpeech: \{\
            type: "PlainText",\
            text: "Mi dispiace, non riesco a rispondere ora."\
          \},\
          shouldEndSession: false\
        \}\
      \});\
    \}\
  \} else \{\
    // Se apri solo "Jarvis Zero" senza una frase\
    res.json(\{\
      version: "1.0",\
      response: \{\
        outputSpeech: \{\
          type: "PlainText",\
          text: "Ciao, sono JARVIS. Di cosa vuoi parlare?"\
        \},\
        shouldEndSession: false\
      \}\
    \});\
  \}\
\});\
\
app.get('/', (req, res) => \{\
  res.send('JARVIS server online.');\
\});\
\
app.listen(port, () => \{\
  console.log(`Server JARVIS avviato sulla porta $\{port\}`);\
\});}